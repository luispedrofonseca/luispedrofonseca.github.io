<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CSharp on LuÃ­s Pedro Fonseca</title>
    <link>http://www.luispedrofonseca.com/categories/csharp/</link>
    <description>Recent content in CSharp on LuÃ­s Pedro Fonseca</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 25 Oct 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://www.luispedrofonseca.com/categories/csharp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Unity - Supporting Multiple Aspect Ratios</title>
      <link>http://www.luispedrofonseca.com/unity-supporting-multiple-aspect-ratios/</link>
      <pubDate>Thu, 25 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.luispedrofonseca.com/unity-supporting-multiple-aspect-ratios/</guid>
      <description>One of the biggest doubts people have when creating mobile games is how to handle the myriad of screen resolutions and aspect ratios. Just on iOS there are currently 4 different aspect ratios: 4:3, 3:2, 16:9 and 19.5:9. On Android, given the thousands of different devices, it ranges anywhere between those. Here&amp;rsquo;s how those aspect ratios compare to each other (in portrait mode):
So what&amp;rsquo;s the solution to make your game look great on these screens while avoiding black bars or stretching?</description>
    </item>
    
    <item>
      <title>Unity VR Joystick</title>
      <link>http://www.luispedrofonseca.com/unity-vr-joystick/</link>
      <pubDate>Thu, 02 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.luispedrofonseca.com/unity-vr-joystick/</guid>
      <description>For the past year, I have become more and more interested in virtual reality, especially after trying out a bunch of demos at the last Unite in LA. So much, in fact, that I have decided to go ahead and buy an HTC Vive. Being a new technology, it is still quite expensive, not only because of the price of the device itself but also because you need to have a pretty beefy PC to support it.</description>
    </item>
    
    <item>
      <title>Learning Unity iOS Game Development â€” Technical review</title>
      <link>http://www.luispedrofonseca.com/learning-unity-ios-game-development-technical-review/</link>
      <pubDate>Fri, 23 Oct 2015 11:34:16 +0000</pubDate>
      
      <guid>http://www.luispedrofonseca.com/learning-unity-ios-game-development-technical-review/</guid>
      <description>Yesterday I got in my mailbox a book I technically reviewed for Packt. It&amp;rsquo;s a great feeling having a book with your name on it, even if not on the front page. ðŸ˜€
As you&amp;rsquo;ve probably guessed, it&amp;rsquo;s about Unity and iOS publishing. Although you won&amp;rsquo;t find anything particularly new in there, it&amp;rsquo;s a nice package, has a few good examples and shouldn&amp;rsquo;t disappoint you. It&amp;rsquo;s a good gift for thatÂ game dev friend of yours who is just getting started.</description>
    </item>
    
    <item>
      <title>Script Inspector 3 (Beta) Quick Review</title>
      <link>http://www.luispedrofonseca.com/script-inspector-3-beta-quick-review/</link>
      <pubDate>Fri, 22 Aug 2014 18:12:54 +0000</pubDate>
      
      <guid>http://www.luispedrofonseca.com/script-inspector-3-beta-quick-review/</guid>
      <description>If you&amp;rsquo;re working with Unity on a Mac you are unfortunately stuck to the ugly, outdated and painfullyÂ sluggish, MonoDevelop. There are some alternatives like using Sublime, TextMate, or, if you&amp;rsquo;re on feeling adventurous, you can evenÂ use Visual Studio (with the amazing UnityVS) from a virtual machine.Â However, none of these options is reallyÂ convenient since you either have to give up on most benefits ofÂ a trueÂ IDE or you have to use a resourceÂ hog VM.</description>
    </item>
    
    <item>
      <title>Unity Quick Tips â€” Enum Description Extension Method</title>
      <link>http://www.luispedrofonseca.com/unity-quick-tips-enum-description-extension-method/</link>
      <pubDate>Fri, 08 Aug 2014 14:16:45 +0000</pubDate>
      
      <guid>http://www.luispedrofonseca.com/unity-quick-tips-enum-description-extension-method/</guid>
      <description>While this tip is not Unity specific, it&amp;rsquo;s still very useful for all C#Â Unity devs out there.
Recently I needed to get a name/description out of a enum. After some digging around, I found this subject is far from consensual and there are dozens of different solutions to accomplish the same result. For me, by far, theÂ simplest and cleanest way to do it is by using a cool feature in C# called extension methods.</description>
    </item>
    
    <item>
      <title>Unity Quick Tips â€” Global Conditional Attributes</title>
      <link>http://www.luispedrofonseca.com/unity-quick-tips-global-conditional-attributes/</link>
      <pubDate>Fri, 18 Jul 2014 17:56:13 +0000</pubDate>
      
      <guid>http://www.luispedrofonseca.com/unity-quick-tips-global-conditional-attributes/</guid>
      <description>A very useful trick you can do on your Unity projects is to setup some global conditional attributes. Let&amp;rsquo;s see how and what for in a very a simple example.
First go to your Player Settings (Edit &amp;gt; Project Settings &amp;gt; Player) and under the Other Settings tab, type &amp;ldquo;DEBUG&amp;rdquo; on the Scripting Define Symbols.
You can now in your scripts do something like:
[System.Diagnostics.Conditional(&amp;quot;DEBUG&amp;quot;)] void DrawRay(Vector2 start, Vector2 dir, Color color, float duration) { Debug.</description>
    </item>
    
    <item>
      <title>Unity Quick Tips â€” Local Cache Server</title>
      <link>http://www.luispedrofonseca.com/unity-quick-tips-cache-server/</link>
      <pubDate>Fri, 11 Jul 2014 22:39:58 +0000</pubDate>
      
      <guid>http://www.luispedrofonseca.com/unity-quick-tips-cache-server/</guid>
      <description>After many years working with Unity, I&amp;rsquo;ve realisedÂ that oneÂ of the most overlooked features of the Unity&amp;rsquo;s Team License, by myself and other fellow developers, is the Cache Server.
Like the name says, what it basically does isÂ caching your assets in order to make them load faster. This isÂ particularly great if you&amp;rsquo;re working on a multi-platform game where you need to switch platforms constantly. As you all know, every time youÂ do that Unity has to reimport all the assets, which can be a pretty painful depending on the size and number of resources on your project.</description>
    </item>
    
  </channel>
</rss>